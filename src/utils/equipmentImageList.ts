/**
 * List of available equipment images
 * Update this list whenever you add new images to public/equipment-icons/
 *
 * AUTO-GENERATED by update-image-list.cjs
 * Do not edit manually - run: node update-image-list.cjs
 */

const availableImages = [
  'badmintonboll',
  'basketboll',
  'bil',
  'bowling',
  'bowling-removebg-preview 1',
  'brännboll',
  'byggset',
  'båt',
  'catchtennis',
  'charlie',
  'comet',
  'dragkamp',
  'enkelrep',
  'fotboll',
  'fotboll-removebg-preview 1',
  'frisbee',
  'fyra_i_rad',
  'goboard',
  'grävmaskiner_och_stora_bilar',
  'guess_who_',
  'guesswho',
  'hink',
  'hink_och_spade',
  'hopprep',
  'hoppring',
  'hoppstylta',
  'innebandyboll',
  'jumping_stick',
  'kaplastavar',
  'koner',
  'kortlek',
  'kratta',
  'kvast',
  'käpphäst',
  'lekband',
  'leklåda',
  'liten_rockring',
  'liten_sopborste',
  'långrep',
  'midnight',
  'ordmix',
  'othello',
  'pall',
  'pingisracket',
  'platta_koner',
  'plockepinn',
  'plusplus',
  'poängmatta',
  'pussel',
  'restaurang1',
  'restaurang2',
  'restaurang3',
  'restaurang4',
  'restaurang5',
  'restaurang6',
  'rockring',
  'rosy',
  'rugbyboll',
  'sandformar',
  'sil',
  'sittunderlag',
  'små_spadar',
  'småmål',
  'spade1',
  'spade2',
  'spade3',
  'spade4',
  'stepbräda',
  'stor_sopborste',
  'stor_tärning',
  'stora_plockepinn',
  'stora_spadar_och_krattor',
  'stora_styltor',
  'storm',
  'stylta',
  'tennisboll',
  'tennisracket',
  'thunder',
  'tre_i_rad_med_koner',
  'twist_band',
  'twister',
  'uno',
  'yatzy',
  'zippy',
  'ärtpåse',
];

/**
 * Find best matching image for given search term
 * Supports partial matching and Swedish characters
 */
export const findMatchingImage = (searchTerm: string): string | undefined => {
  if (!searchTerm || searchTerm.trim().length < 3) {
    return undefined;
  }

  // Normalize: Unicode NFC, lowercase, trim, convert spaces to underscores
  const normalized = searchTerm.normalize('NFC').toLowerCase().trim().replace(/\s+/g, '_');

  // Try exact match first (normalized)
  const exactMatch = availableImages.find(img =>
    img.normalize('NFC').toLowerCase() === normalized
  );
  if (exactMatch) return exactMatch;

  // Try starts-with match
  const startsWithMatch = availableImages.find(img =>
    img.normalize('NFC').toLowerCase().startsWith(normalized)
  );
  if (startsWithMatch) return startsWithMatch;

  // Try substring match (contains)
  const substringMatch = availableImages.find(img =>
    img.normalize('NFC').toLowerCase().includes(normalized)
  );

  return substringMatch;
};
